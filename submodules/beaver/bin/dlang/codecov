#!/bin/sh
# Copyright sociomantic labs GmbH 2017.
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE.txt or copy at
# http://www.boost.org/LICENSE_1_0.txt)
#
# Build D applications
set -eu

# First check if there are any reports at all
if test "$(echo .*.lst)" = ".*.lst"
then
    echo "No reports found" >&2
    exit 0
fi

# Paths
r="$(readlink -f $(dirname $0)/../..)"
beaver="$r/bin/beaver"

# Use general dlang utilities
. $r/lib/dlang.sh

# Set the DC and DVER environment variables and export them to docker
set_dc_dver

# Export any codecov-specific environment variable
codecov_vars="$(printenv -0 | sed -zn 's/^\(CODECOV_[^=]\+\)=.*$/\1\n/p' |
        tr -d '\0')"
# Export D related environment variables
dlang_vars="DIST DMD DC DVER D2_ONLY F V"
export BEAVER_DOCKER_VARS="${BEAVER_DOCKER_VARS:-} $codecov_vars $dlang_vars"

# Arguments to pass to codecov by default

# Copy coverage reports and git structure to a clean directory
tmp=`mktemp -d`
trap 'r=$?; rm -fr "$tmp"; exit $r' EXIT INT TERM QUIT
mkdir -p "$tmp/reports"
cp -a .*.lst "$tmp/reports"
git archive --format=tar HEAD | (cd "$tmp" && tar xf -)
cp -a .git "$tmp/"
cp -av "$r/bin/codecov-bash" "$tmp/codecov"

# Build codecov flags
flags=
for flag in "flavour_$F" "dist_$DIST" "dmd_$DMD"
do
    # Codecov only accepts flags that match ^[\w\,]+$
    flag="$(echo "$flag" | sed -r 's/\W/_/g')"
    if test -z "$flags"
    then
        flags="-F $flag"
    else
        flags="$flags,$flag"
    fi
done

# Run codecov in the confined environment
cd "$tmp"
"$beaver" run ./codecov -n beaver -s reports -e DIST,DMD,DC,F \
    $flags -X gcov -X coveragepy -X xcode \
    "$@"
